// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: conf/conf.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Environment int32

const (
	Environment_NONE Environment = 0
	Environment_DEV  Environment = 1
	Environment_PRE  Environment = 2
	Environment_PROD Environment = 3
)

// Enum value maps for Environment.
var (
	Environment_name = map[int32]string{
		0: "NONE",
		1: "DEV",
		2: "PRE",
		3: "PROD",
	}
	Environment_value = map[string]int32{
		"NONE": 0,
		"DEV":  1,
		"PRE":  2,
		"PROD": 3,
	}
)

func (x Environment) Enum() *Environment {
	p := new(Environment)
	*p = x
	return p
}

func (x Environment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Environment) Descriptor() protoreflect.EnumDescriptor {
	return file_conf_conf_proto_enumTypes[0].Descriptor()
}

func (Environment) Type() protoreflect.EnumType {
	return &file_conf_conf_proto_enumTypes[0]
}

func (x Environment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Environment.Descriptor instead.
func (Environment) EnumDescriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{0}
}

type Bootstrap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Env           Environment            `protobuf:"varint,1,opt,name=env,proto3,enum=kratos.api.Environment" json:"env,omitempty"`
	Server        *Server                `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	Registry      *Registry              `protobuf:"bytes,3,opt,name=registry,proto3" json:"registry,omitempty"`
	Otel          *Otel                  `protobuf:"bytes,4,opt,name=otel,proto3" json:"otel,omitempty"`
	Log           *Log                   `protobuf:"bytes,5,opt,name=log,proto3" json:"log,omitempty"`
	Data          *Data                  `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	mi := &file_conf_conf_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Bootstrap) GetEnv() Environment {
	if x != nil {
		return x.Env
	}
	return Environment_NONE
}

func (x *Bootstrap) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *Bootstrap) GetRegistry() *Registry {
	if x != nil {
		return x.Registry
	}
	return nil
}

func (x *Bootstrap) GetOtel() *Otel {
	if x != nil {
		return x.Otel
	}
	return nil
}

func (x *Bootstrap) GetLog() *Log {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *Bootstrap) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filepath      string                 `protobuf:"bytes,1,opt,name=filepath,proto3" json:"filepath,omitempty"`
	MaxSize       int32                  `protobuf:"varint,2,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	MaxBackups    int32                  `protobuf:"varint,3,opt,name=max_backups,json=maxBackups,proto3" json:"max_backups,omitempty"`
	Level         int32                  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	MaxAge        int32                  `protobuf:"varint,5,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_conf_conf_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *Log) GetFilepath() string {
	if x != nil {
		return x.Filepath
	}
	return ""
}

func (x *Log) GetMaxSize() int32 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *Log) GetMaxBackups() int32 {
	if x != nil {
		return x.MaxBackups
	}
	return 0
}

func (x *Log) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Log) GetMaxAge() int32 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

type Server struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Http          *Server_HTTP           `protobuf:"bytes,1,opt,name=http,proto3" json:"http,omitempty"`
	Grpc          *Server_GRPC           `protobuf:"bytes,2,opt,name=grpc,proto3" json:"grpc,omitempty"`
	Pprof         *Server_Pprof          `protobuf:"bytes,3,opt,name=pprof,proto3" json:"pprof,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_conf_conf_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2}
}

func (x *Server) GetHttp() *Server_HTTP {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *Server) GetGrpc() *Server_GRPC {
	if x != nil {
		return x.Grpc
	}
	return nil
}

func (x *Server) GetPprof() *Server_Pprof {
	if x != nil {
		return x.Pprof
	}
	return nil
}

type Registry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      []string               `protobuf:"bytes,1,rep,name=endpoint,proto3" json:"endpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry) Reset() {
	*x = Registry{}
	mi := &file_conf_conf_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry) ProtoMessage() {}

func (x *Registry) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry.ProtoReflect.Descriptor instead.
func (*Registry) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{3}
}

func (x *Registry) GetEndpoint() []string {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

type Otel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trace         *Otel_Trace            `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	Metric        *Otel_Metric           `protobuf:"bytes,2,opt,name=metric,proto3" json:"metric,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Otel) Reset() {
	*x = Otel{}
	mi := &file_conf_conf_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Otel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Otel) ProtoMessage() {}

func (x *Otel) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Otel.ProtoReflect.Descriptor instead.
func (*Otel) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{4}
}

func (x *Otel) GetTrace() *Otel_Trace {
	if x != nil {
		return x.Trace
	}
	return nil
}

func (x *Otel) GetMetric() *Otel_Metric {
	if x != nil {
		return x.Metric
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Database      map[string]*Data_Database `protobuf:"bytes,1,rep,name=database,proto3" json:"database,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Redis         map[string]*Data_Redis    `protobuf:"bytes,2,rep,name=redis,proto3" json:"redis,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Kafka         *Data_Kafka               `protobuf:"bytes,3,opt,name=kafka,proto3" json:"kafka,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_conf_conf_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5}
}

func (x *Data) GetDatabase() map[string]*Data_Database {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *Data) GetRedis() map[string]*Data_Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *Data) GetKafka() *Data_Kafka {
	if x != nil {
		return x.Kafka
	}
	return nil
}

type Server_HTTP struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server_HTTP) Reset() {
	*x = Server_HTTP{}
	mi := &file_conf_conf_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_HTTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_HTTP) ProtoMessage() {}

func (x *Server_HTTP) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_HTTP.ProtoReflect.Descriptor instead.
func (*Server_HTTP) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Server_HTTP) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_HTTP) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_HTTP) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Server_GRPC struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server_GRPC) Reset() {
	*x = Server_GRPC{}
	mi := &file_conf_conf_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_GRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_GRPC) ProtoMessage() {}

func (x *Server_GRPC) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_GRPC.ProtoReflect.Descriptor instead.
func (*Server_GRPC) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Server_GRPC) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_GRPC) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_GRPC) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Server_Pprof struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addr          string                 `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server_Pprof) Reset() {
	*x = Server_Pprof{}
	mi := &file_conf_conf_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_Pprof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_Pprof) ProtoMessage() {}

func (x *Server_Pprof) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_Pprof.ProtoReflect.Descriptor instead.
func (*Server_Pprof) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2, 2}
}

func (x *Server_Pprof) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Otel_Trace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Insecure      bool                   `protobuf:"varint,2,opt,name=insecure,proto3" json:"insecure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Otel_Trace) Reset() {
	*x = Otel_Trace{}
	mi := &file_conf_conf_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Otel_Trace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Otel_Trace) ProtoMessage() {}

func (x *Otel_Trace) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Otel_Trace.ProtoReflect.Descriptor instead.
func (*Otel_Trace) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Otel_Trace) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Otel_Trace) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

type Otel_Metric struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	EnableExemplar bool                   `protobuf:"varint,1,opt,name=enable_exemplar,json=enableExemplar,proto3" json:"enable_exemplar,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Otel_Metric) Reset() {
	*x = Otel_Metric{}
	mi := &file_conf_conf_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Otel_Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Otel_Metric) ProtoMessage() {}

func (x *Otel_Metric) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Otel_Metric.ProtoReflect.Descriptor instead.
func (*Otel_Metric) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Otel_Metric) GetEnableExemplar() bool {
	if x != nil {
		return x.EnableExemplar
	}
	return false
}

type Data_Database struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Driver          string                 `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	Source          string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	MaxOpenConn     int32                  `protobuf:"varint,3,opt,name=max_open_conn,json=maxOpenConn,proto3" json:"max_open_conn,omitempty"`
	MaxIdleConn     int32                  `protobuf:"varint,4,opt,name=max_idle_conn,json=maxIdleConn,proto3" json:"max_idle_conn,omitempty"`
	ConnMaxLifetime *durationpb.Duration   `protobuf:"bytes,5,opt,name=conn_max_lifetime,json=connMaxLifetime,proto3" json:"conn_max_lifetime,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Data_Database) Reset() {
	*x = Data_Database{}
	mi := &file_conf_conf_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Database) ProtoMessage() {}

func (x *Data_Database) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Database.ProtoReflect.Descriptor instead.
func (*Data_Database) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Data_Database) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Data_Database) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Data_Database) GetMaxOpenConn() int32 {
	if x != nil {
		return x.MaxOpenConn
	}
	return 0
}

func (x *Data_Database) GetMaxIdleConn() int32 {
	if x != nil {
		return x.MaxIdleConn
	}
	return 0
}

func (x *Data_Database) GetConnMaxLifetime() *durationpb.Duration {
	if x != nil {
		return x.ConnMaxLifetime
	}
	return nil
}

type Data_Redis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addr          string                 `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	ReadTimeout   *durationpb.Duration   `protobuf:"bytes,3,opt,name=read_timeout,json=readTimeout,proto3" json:"read_timeout,omitempty"`
	WriteTimeout  *durationpb.Duration   `protobuf:"bytes,4,opt,name=write_timeout,json=writeTimeout,proto3" json:"write_timeout,omitempty"`
	Shards        []int32                `protobuf:"varint,5,rep,packed,name=shards,proto3" json:"shards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Redis) Reset() {
	*x = Data_Redis{}
	mi := &file_conf_conf_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Redis) ProtoMessage() {}

func (x *Data_Redis) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Redis.ProtoReflect.Descriptor instead.
func (*Data_Redis) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5, 1}
}

func (x *Data_Redis) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Data_Redis) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Data_Redis) GetReadTimeout() *durationpb.Duration {
	if x != nil {
		return x.ReadTimeout
	}
	return nil
}

func (x *Data_Redis) GetWriteTimeout() *durationpb.Duration {
	if x != nil {
		return x.WriteTimeout
	}
	return nil
}

func (x *Data_Redis) GetShards() []int32 {
	if x != nil {
		return x.Shards
	}
	return nil
}

type Data_Kafka struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrokerList    []string               `protobuf:"bytes,1,rep,name=broker_list,json=brokerList,proto3" json:"broker_list,omitempty"`
	GroupId       string                 `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Kafka) Reset() {
	*x = Data_Kafka{}
	mi := &file_conf_conf_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Kafka) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Kafka) ProtoMessage() {}

func (x *Data_Kafka) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Kafka.ProtoReflect.Descriptor instead.
func (*Data_Kafka) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5, 2}
}

func (x *Data_Kafka) GetBrokerList() []string {
	if x != nil {
		return x.BrokerList
	}
	return nil
}

func (x *Data_Kafka) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

var File_conf_conf_proto protoreflect.FileDescriptor

const file_conf_conf_proto_rawDesc = "" +
	"\n" +
	"\x0fconf/conf.proto\x12\n" +
	"kratos.api\x1a\x1egoogle/protobuf/duration.proto\"\x83\x02\n" +
	"\tBootstrap\x12)\n" +
	"\x03env\x18\x01 \x01(\x0e2\x17.kratos.api.EnvironmentR\x03env\x12*\n" +
	"\x06server\x18\x02 \x01(\v2\x12.kratos.api.ServerR\x06server\x120\n" +
	"\bregistry\x18\x03 \x01(\v2\x14.kratos.api.RegistryR\bregistry\x12$\n" +
	"\x04otel\x18\x04 \x01(\v2\x10.kratos.api.OtelR\x04otel\x12!\n" +
	"\x03log\x18\x05 \x01(\v2\x0f.kratos.api.LogR\x03log\x12$\n" +
	"\x04data\x18\x06 \x01(\v2\x10.kratos.api.DataR\x04data\"\x8c\x01\n" +
	"\x03Log\x12\x1a\n" +
	"\bfilepath\x18\x01 \x01(\tR\bfilepath\x12\x19\n" +
	"\bmax_size\x18\x02 \x01(\x05R\amaxSize\x12\x1f\n" +
	"\vmax_backups\x18\x03 \x01(\x05R\n" +
	"maxBackups\x12\x14\n" +
	"\x05level\x18\x04 \x01(\x05R\x05level\x12\x17\n" +
	"\amax_age\x18\x05 \x01(\x05R\x06maxAge\"\x85\x03\n" +
	"\x06Server\x12+\n" +
	"\x04http\x18\x01 \x01(\v2\x17.kratos.api.Server.HTTPR\x04http\x12+\n" +
	"\x04grpc\x18\x02 \x01(\v2\x17.kratos.api.Server.GRPCR\x04grpc\x12.\n" +
	"\x05pprof\x18\x03 \x01(\v2\x18.kratos.api.Server.PprofR\x05pprof\x1ai\n" +
	"\x04HTTP\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x1ai\n" +
	"\x04GRPC\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x1a\x1b\n" +
	"\x05Pprof\x12\x12\n" +
	"\x04addr\x18\x01 \x01(\tR\x04addr\"&\n" +
	"\bRegistry\x12\x1a\n" +
	"\bendpoint\x18\x01 \x03(\tR\bendpoint\"\xd9\x01\n" +
	"\x04Otel\x12,\n" +
	"\x05trace\x18\x01 \x01(\v2\x16.kratos.api.Otel.TraceR\x05trace\x12/\n" +
	"\x06metric\x18\x02 \x01(\v2\x17.kratos.api.Otel.MetricR\x06metric\x1a?\n" +
	"\x05Trace\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x1a\n" +
	"\binsecure\x18\x02 \x01(\bR\binsecure\x1a1\n" +
	"\x06Metric\x12'\n" +
	"\x0fenable_exemplar\x18\x01 \x01(\bR\x0eenableExemplar\"\xae\x06\n" +
	"\x04Data\x12:\n" +
	"\bdatabase\x18\x01 \x03(\v2\x1e.kratos.api.Data.DatabaseEntryR\bdatabase\x121\n" +
	"\x05redis\x18\x02 \x03(\v2\x1b.kratos.api.Data.RedisEntryR\x05redis\x12,\n" +
	"\x05kafka\x18\x03 \x01(\v2\x16.kratos.api.Data.KafkaR\x05kafka\x1a\xc9\x01\n" +
	"\bDatabase\x12\x16\n" +
	"\x06driver\x18\x01 \x01(\tR\x06driver\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\"\n" +
	"\rmax_open_conn\x18\x03 \x01(\x05R\vmaxOpenConn\x12\"\n" +
	"\rmax_idle_conn\x18\x04 \x01(\x05R\vmaxIdleConn\x12E\n" +
	"\x11conn_max_lifetime\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\x0fconnMaxLifetime\x1a\xcd\x01\n" +
	"\x05Redis\x12\x12\n" +
	"\x04addr\x18\x01 \x01(\tR\x04addr\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12<\n" +
	"\fread_timeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\vreadTimeout\x12>\n" +
	"\rwrite_timeout\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\fwriteTimeout\x12\x16\n" +
	"\x06shards\x18\x05 \x03(\x05R\x06shards\x1aC\n" +
	"\x05Kafka\x12\x1f\n" +
	"\vbroker_list\x18\x01 \x03(\tR\n" +
	"brokerList\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\x1aV\n" +
	"\rDatabaseEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.kratos.api.Data.DatabaseR\x05value:\x028\x01\x1aP\n" +
	"\n" +
	"RedisEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.kratos.api.Data.RedisR\x05value:\x028\x01*3\n" +
	"\vEnvironment\x12\b\n" +
	"\x04NONE\x10\x00\x12\a\n" +
	"\x03DEV\x10\x01\x12\a\n" +
	"\x03PRE\x10\x02\x12\b\n" +
	"\x04PROD\x10\x03B7Z5github.com/go-kratos/kratos-layout/internal/conf;confb\x06proto3"

var (
	file_conf_conf_proto_rawDescOnce sync.Once
	file_conf_conf_proto_rawDescData []byte
)

func file_conf_conf_proto_rawDescGZIP() []byte {
	file_conf_conf_proto_rawDescOnce.Do(func() {
		file_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_conf_conf_proto_rawDesc), len(file_conf_conf_proto_rawDesc)))
	})
	return file_conf_conf_proto_rawDescData
}

var file_conf_conf_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_conf_conf_proto_goTypes = []any{
	(Environment)(0),            // 0: kratos.api.Environment
	(*Bootstrap)(nil),           // 1: kratos.api.Bootstrap
	(*Log)(nil),                 // 2: kratos.api.Log
	(*Server)(nil),              // 3: kratos.api.Server
	(*Registry)(nil),            // 4: kratos.api.Registry
	(*Otel)(nil),                // 5: kratos.api.Otel
	(*Data)(nil),                // 6: kratos.api.Data
	(*Server_HTTP)(nil),         // 7: kratos.api.Server.HTTP
	(*Server_GRPC)(nil),         // 8: kratos.api.Server.GRPC
	(*Server_Pprof)(nil),        // 9: kratos.api.Server.Pprof
	(*Otel_Trace)(nil),          // 10: kratos.api.Otel.Trace
	(*Otel_Metric)(nil),         // 11: kratos.api.Otel.Metric
	(*Data_Database)(nil),       // 12: kratos.api.Data.Database
	(*Data_Redis)(nil),          // 13: kratos.api.Data.Redis
	(*Data_Kafka)(nil),          // 14: kratos.api.Data.Kafka
	nil,                         // 15: kratos.api.Data.DatabaseEntry
	nil,                         // 16: kratos.api.Data.RedisEntry
	(*durationpb.Duration)(nil), // 17: google.protobuf.Duration
}
var file_conf_conf_proto_depIdxs = []int32{
	0,  // 0: kratos.api.Bootstrap.env:type_name -> kratos.api.Environment
	3,  // 1: kratos.api.Bootstrap.server:type_name -> kratos.api.Server
	4,  // 2: kratos.api.Bootstrap.registry:type_name -> kratos.api.Registry
	5,  // 3: kratos.api.Bootstrap.otel:type_name -> kratos.api.Otel
	2,  // 4: kratos.api.Bootstrap.log:type_name -> kratos.api.Log
	6,  // 5: kratos.api.Bootstrap.data:type_name -> kratos.api.Data
	7,  // 6: kratos.api.Server.http:type_name -> kratos.api.Server.HTTP
	8,  // 7: kratos.api.Server.grpc:type_name -> kratos.api.Server.GRPC
	9,  // 8: kratos.api.Server.pprof:type_name -> kratos.api.Server.Pprof
	10, // 9: kratos.api.Otel.trace:type_name -> kratos.api.Otel.Trace
	11, // 10: kratos.api.Otel.metric:type_name -> kratos.api.Otel.Metric
	15, // 11: kratos.api.Data.database:type_name -> kratos.api.Data.DatabaseEntry
	16, // 12: kratos.api.Data.redis:type_name -> kratos.api.Data.RedisEntry
	14, // 13: kratos.api.Data.kafka:type_name -> kratos.api.Data.Kafka
	17, // 14: kratos.api.Server.HTTP.timeout:type_name -> google.protobuf.Duration
	17, // 15: kratos.api.Server.GRPC.timeout:type_name -> google.protobuf.Duration
	17, // 16: kratos.api.Data.Database.conn_max_lifetime:type_name -> google.protobuf.Duration
	17, // 17: kratos.api.Data.Redis.read_timeout:type_name -> google.protobuf.Duration
	17, // 18: kratos.api.Data.Redis.write_timeout:type_name -> google.protobuf.Duration
	12, // 19: kratos.api.Data.DatabaseEntry.value:type_name -> kratos.api.Data.Database
	13, // 20: kratos.api.Data.RedisEntry.value:type_name -> kratos.api.Data.Redis
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_conf_conf_proto_init() }
func file_conf_conf_proto_init() {
	if File_conf_conf_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_conf_conf_proto_rawDesc), len(file_conf_conf_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_conf_proto_goTypes,
		DependencyIndexes: file_conf_conf_proto_depIdxs,
		EnumInfos:         file_conf_conf_proto_enumTypes,
		MessageInfos:      file_conf_conf_proto_msgTypes,
	}.Build()
	File_conf_conf_proto = out.File
	file_conf_conf_proto_goTypes = nil
	file_conf_conf_proto_depIdxs = nil
}
